<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.parim.sns.modules.sys.repository.UserGroupRepository">
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="net.parim.sns.modules.sys.entity.UserGroup">
		<selectKey resultType="long" order="BEFORE" keyProperty="id">
		select nextval('general') as "id"
		</selectKey>
		INSERT INTO `user_group` (`id`, `parent_id`, `site_id`, `name`, `is_root`, `created_by`, `create_date`, `last_updated_by`, `last_update_date`, `custom_theme_id`, `mobile_theme_id`)
		VALUES (#{id}, #{parent.id}, #{site.id}, #{name}, #{isRoot}, ${createdBy.id}, now(), #{lastUpdatedBy.id}, now(), #{customThemeId}, #{mobileThemeId})
	</insert>
	
	<update id="update" parameterType="net.parim.sns.modules.sys.entity.UserGroup">
		UPDATE `user_group`
			`parent_id`=#{parent.id}, 
			`site_id`=#{site.id}, 
			`name`=#{name}, 
			`is_root`=#{isRoot}, 
			`last_updated_by`=#{lastUpdatedBy.id}, 
			`last_update_date`=now(), 
			`custom_theme_id`=#{customThemeId}, 
			`mobile_theme_id`=#{mobileThemeId} 
		WHERE `id`=#{id}
	</update>
	
	<delete id="delete" parameterType="long">
		delete user_group where id=#{id}
	</delete>
	
	<!-- 给定几套删除组织后下级组织和用户的 “级联（连锁）” 处理方案，让用户自己选择 -->
	<!-- <delete id="deleteChildren">
	</delete> -->
	
	
	<select id="findOne" parameterType="long" resultType="net.parim.sns.modules.sys.entity.UserGroup">
		select g.id as "id",
			g.`parent_id` as "parent.id", 
			g.`site_id` as "site.id", 
			g.`name`, 
			g.`is_root`, 
			g.`created_by` as "createdBy.id", 
			g.`create_date`, 
			g.`last_updated_by` as "lastUpdatedBy.id", 
			g.`last_update_date`, 
			g.`custom_theme_id`, 
			g.`mobile_theme_id`,
			p.name as "parent.name",
			s.name as "site.name",
			uc.username as "createdBy.username",
			uc.first_name as "createdBy.firstName",
			uc.last_name as "createdBy.lastName",
			ul.username as "lastUpdatedBy.username",
			ul.first_name as "lastUpdatedBy.firstName",
			ul.last_name as "lastUpdatedBy.lastName"
		from user_group g left join user_group p on p.id = g.parent_id
			left join site s on s.id = g.site_id
			left join ila_user uc on uc.id = g.created_by
			left join ila_user ul on ul.id = g.last_updated_by
		where g.id = #{id} 
			and s.is_deleted = 0 
			<!-- and (p.is_deleted=null or p.is_deleted=0) -->
	</select>
	
	<select id="findAll" resultType="net.parim.sns.modules.sys.entity.UserGroup">
		select g.`parent_id` as "parent.id", 
			g.`site_id` as "site.id", 
			g.`name`, 
			g.`is_root`, 
			g.`created_by` as "createdBy.id", 
			g.`create_date`, 
			g.`last_updated_by` as "lastUpdatedBy.id", 
			g.`last_update_date`, 
			g.`custom_theme_id`, 
			g.`mobile_theme_id`,
			p.name as "parent.name",
			s.name as "site.name",
			uc.username as "createdBy.username",
			uc.first_name as "createdBy.firstName",
			uc.last_name as "createdBy.lastName",
			ul.username as "lastUpdatedBy.username",
			ul.first_name as "lastUpdatedBy.firstName",
			ul.last_name as "lastUpdatedBy.lastName"
		from user_group g left join user_group p on p.id = g.parent_id
			left join site s on s.id = g.site_id
			left join ila_user uc on uc.id = g.created_by
			left join ila_user ul on ul.id = g.last_updated_by
		where s.is_deleted = 0 
	</select>
	
	<select id="findAllRoots" resultType="net.parim.sns.modules.sys.entity.UserGroup">
		select g.`parent_id` as "parent.id", 
			g.`site_id` as "site.id", 
			g.`name`, 
			g.`is_root`, 
			g.`created_by` as "createdBy.id", 
			g.`create_date`, 
			g.`last_updated_by` as "lastUpdatedBy.id", 
			g.`last_update_date`, 
			g.`custom_theme_id`, 
			g.`mobile_theme_id`,
			p.name as "parent.name",
			s.name as "site.name",
			uc.username as "createdBy.username",
			uc.first_name as "createdBy.firstName",
			uc.last_name as "createdBy.lastName",
			ul.username as "lastUpdatedBy.username",
			ul.first_name as "lastUpdatedBy.firstName",
			ul.last_name as "lastUpdatedBy.lastName"
		from user_group g left join user_group p on p.id = g.parent_id
			left join site s on s.id = g.site_id
			left join ila_user uc on uc.id = g.created_by
			left join ila_user ul on ul.id = g.last_updated_by
		where g.parent_id is null
			and s.is_deleted = 0 
	</select>
	
	<select id="findAllChildren" resultType="net.parim.sns.modules.sys.entity.UserGroup">
		select g.`parent_id` as "parent.id", 
			g.`site_id` as "site.id", 
			g.`name`, 
			g.`is_root`, 
			g.`created_by` as "createdBy.id", 
			g.`create_date`, 
			g.`last_updated_by` as "lastUpdatedBy.id", 
			g.`last_update_date`, 
			g.`custom_theme_id`, 
			g.`mobile_theme_id`,
			p.name as "parent.name",
			s.name as "site.name",
			uc.username as "createdBy.username",
			uc.first_name as "createdBy.firstName",
			uc.last_name as "createdBy.lastName",
			ul.username as "lastUpdatedBy.username",
			ul.first_name as "lastUpdatedBy.firstName",
			ul.last_name as "lastUpdatedBy.lastName"
		from user_group g left join user_group p on p.id = g.parent_id
			left join site s on s.id = g.site_id
			left join ila_user uc on uc.id = g.created_by
			left join ila_user ul on ul.id = g.last_updated_by
		where g.parent_id = #{id}
			and s.is_deleted = 0 
	</select>
	
	<select id="findAllParents" resultType="net.parim.sns.modules.sys.entity.UserGroup">
		
	</select>
</mapper>