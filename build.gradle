import org.gradle.plugins.ide.eclipse.model.Facet
apply plugin: 'maven' 
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'jetty'


sourceCompatibility = 1.7 // 设置 JDK 版本
targetCompatibility = 1.7   // 设置 JDK 版本
//webAppDirName = 'WebRoot'    // 设置 WebApp 根目录

[compileJava,compileTestJava,javadoc]*.options*.encoding = "UTF-8"
//变量
ext {
	//main version setting
    springVersion = '4.0.8.RELEASE'
	mybatisVersion = '3.2.8'
	mybatisSpringVersion = '1.2.2'
	druidVersion = '1.0.11'
	ehcacheVersion = '2.6.9'
	ehcacheWebVersion = '2.0.4'
	shiroVersion = '1.2.3'
	sitemeshVersion = '2.4.2'
	
	// jdbc driver setting
	mysqlDriverVersion = '5.1.30'
	oracleDriverVersion = '10.2.0.4.0'
	
	//tools version setting
	slf4jVersion = '1.7.7'
	commonsLang3Version = '3.3.2'
	commonsIoVersion = '2.4'
	commonsCodecVersion = '1.9'
	commonsFileuploadVersion = '1.3.1'
	commonsBeanutilsVersion = '1.9.1'
	jacksonVersion = '2.2.3'
	xstreamVersion = '1.4.7'
	guavaVersion = '17.0'
	dozerVersion = '5.5.1'
	poiVersion = '3.9'
	freemarkerVersion = '2.3.20'
    
	//环境区分，默认开发环境
	env = System.getProperty("env")?:"dev"
}

// 设置 maven 库地址
repositories {
	mavenCentral() // 中央库
	maven {url 'http://central.maven.org/maven2/'}

	maven {url 'http://maven.oschina.net/content/groups/public/'}	// 国内库地址
	maven {url 'http://download.java.net/maven/2/'}
	maven {url 'http://repo.spring.io/release/'}
	maven {url 'http://repo.maven.apache.org/maven2'}
	maven {url 'http://repo1.maven.org/maven2/'}
	maven {url 'https://maven.alfresco.com/nexus/content/groups/public'}
	maven {url 'https://app.camunda.com/nexus/content/groups/public'}
	maven {url 'http://git.oschina.net/thinkgem/repos/raw/master'}
	maven {url 'https://raw.github.com/thinkgem/repository/master'}
    
    mavenCentral() // 中央库一般访问很慢， 但上面的其他代理库，代码在某些环境下可能有问题（"hr"标签没有闭合标签"</hr>"）。现在只能通过切换库的优先级，来解决此问题。更好的解决方案寻求中。
}


// 设置依赖
dependencies {
	compile (
		//spring
		//compile "org.springframework:spring-context:${springVersion}"
		"org.springframework:spring-webmvc:${springVersion}", //此时不用配spring-context依赖关系
		//"org.springframework:spring-test:${springVersion}",
		"org.springframework:spring-orm:${springVersion}",	//ORM 对象关系映射
		"org.springframework:spring-oxm:${springVersion}",
		"org.springframework:spring-context-support:${springVersion}",
		
		//PERSISTENCE
		//MyBatis
		"org.mybatis:mybatis:${mybatisVersion}",
		"org.mybatis:mybatis-spring:${mybatisSpringVersion}",
		//connection pool
		"com.alibaba:druid:${druidVersion}",
		//jdbc driver
		"mysql:mysql-connector-java:${mysqlDriverVersion}",	//mysql 驱动
		//"com.oracle:ojdbc14:${oracleDriverVersion}",
		
		//WEB
		"opensymphony:sitemesh:${sitemeshVersion}",
		"taglibs:standard:1.1.2",
		
		//CACHE
		"net.sf.ehcache:ehcache-core:${ehcacheVersion}",
		"net.sf.ehcache:ehcache-web:${ehcacheWebVersion}",
		"redis.clients:jedis:2.5.1",
		
		//SECURITY
		"org.apache.shiro:shiro-core:${shiroVersion}",
		"org.apache.shiro:shiro-spring:${shiroVersion}",
		"org.apache.shiro:shiro-cas:${shiroVersion}",
		"org.apache.shiro:shiro-web:${shiroVersion}",
		"org.apache.shiro:shiro-ehcache:${shiroVersion}",
		
		
		//日志记录 LOGGING
		//compile 'log4j:log4j:1.2.14'
		"org.slf4j:slf4j-api:${slf4jVersion}",
		"org.slf4j:slf4j-log4j12:${slf4jVersion}",
		"org.slf4j:jcl-over-slf4j:${slf4jVersion}",	//common-logging 实际调用slf4j
		"org.slf4j:jul-to-slf4j:${slf4jVersion}",	//java.util.logging 实际调用slf4j
			
		
		//GENERAL UTILS
		//commons
		"org.apache.commons:commons-lang3:${commonsLang3Version}",
		"commons-io:commons-io:${commonsIoVersion}",
		"commons-codec:commons-codec:${commonsCodecVersion}",
		"commons-fileupload:commons-fileupload:${commonsFileuploadVersion}",
		"commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}",
		"org.apache.commons:commons-email:1.4",
		//google java lib
		"com.google.guava:guava:${guavaVersion}",
		//json
		//compile "com.fasterxml.jackson.core:jackson-databind:2.6.1"
		"com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
		"com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
		"com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
		"com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jacksonVersion}",
		//xstream xml
		"com.thoughtworks.xstream:xstream:${xstreamVersion}",
		//pojo copy
		"net.sf.dozer:dozer:${dozerVersion}",
		//freemarker engine
		"org.freemarker:freemarker:${freemarkerVersion}",
		//email
		"javax.mail:mail:1.4.7",
		"javax.activation:activation:1.1.1",
		//poi office
		"org.apache.poi:poi:${poiVersion}",
		"org.apache.poi:poi-ooxml:${poiVersion}",
		"org.apache.poi:poi-ooxml-schemas:${poiVersion}",
		//image util
		"com.drewnoakes:metadata-extractor:2.6.2",
		//条形码、二维码生成
		"com.google.zxing:core:2.2",
		"com.google.zxing:javase:2.2",
		//中文分词
		"org.wltea:analyzer:2012_u6",
		//ant core for use ant-zip
		"org.apache.ant:ant:1.9.4",
		
		//User Agent
		"bitwalker:UserAgentUtils:1.13"
	)
	
	compile fileTree(dir: 'lib', exclude:'SNZ9RHRB.jar', include: '*.jar')
	
	providedCompile "javax.servlet.jsp:jsp-api:2.2.1-b03"  
    providedCompile "javax.servlet:servlet-api:2.5" // 编译期
    
	//testCompile "org.springframework:spring-test:${springVersion}"
	//testCompile "junit:junit:4.11" 
	compile "org.springframework:spring-test:${springVersion}"
	compile "junit:junit:4.11"
}

// 设置 Project Facets
eclipse {
    wtp {
        facet {
            facet name: 'jst.web', type: Facet.FacetType.fixed
            facet name: 'wst.jsdt.web', type: Facet.FacetType.fixed
            facet name: 'jst.java', type: Facet.FacetType.fixed
            facet name: 'jst.web', version: '2.5'
            facet name: 'jst.java', version: '1.7'
            facet name: 'wst.jsdt.web', version: '1.0'
        }
    }
	//设置eclipse的编译目录,默认为bin目录,web工程改为如下
	classpath {
		defaultOutputDir = file("build/classes")
	}
}

/*sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src'
			srcDir 'resources/'+env//使用 gradle war -Denv=?根据不同的环境打war包
        }
    }
}*/


jettyRun{  
    webAppSourceDirectory file("$projectDir/WebRoot/")  
    httpPort 8080
    contextPath project.name
    scanIntervalSeconds 0  
    reload "automatic"
}

